Day 12.1>

mysql> SELECT YEAR(orderDate) AS `YEAR`,monthname(orderDate) AS MONTH, COUNT(orderNumber) AS `TOTAL ORDERS`, concat(Round((COUNT(orderNumber)/(LAG(COUNT(orderNumber)) OVER(ORDER BY YEAR(orderDate),month(month) )))*100-100,0),'%') AS `% YoY Change` FROM ORDERS GROUP BY `YEAR`,month ORDER BY  `YEAR`,month(month) ;
+------+-----------+--------------+--------------+
| YEAR | MONTH     | TOTAL ORDERS | % YoY Change |
+------+-----------+--------------+--------------+
| 2003 | January   |            5 | NULL         |
| 2003 | February  |            3 | -40%         |
| 2003 | March     |            6 | 100%         |
| 2003 | April     |            7 | 17%          |
| 2003 | May       |            6 | -14%         |
| 2003 | June      |            7 | 17%          |
| 2003 | July      |            7 | 0%           |
| 2003 | August    |            5 | -29%         |
| 2003 | September |            8 | 60%          |
| 2003 | October   |           18 | 125%         |
| 2003 | November  |           30 | 67%          |
| 2003 | December  |            9 | -70%         |
| 2004 | January   |            8 | -11%         |
| 2004 | February  |           11 | 38%          |
| 2004 | March     |            8 | -27%         |
| 2004 | April     |           10 | 25%          |
| 2004 | May       |            8 | -20%         |
| 2004 | June      |           12 | 50%          |
| 2004 | July      |           11 | -8%          |
| 2004 | August    |           12 | 9%           |
| 2004 | September |           12 | 0%           |
| 2004 | October   |           13 | 8%           |
| 2004 | November  |           33 | 154%         |
| 2004 | December  |           13 | -61%         |
| 2005 | January   |           12 | -8%          |
| 2005 | February  |           12 | 0%           |
| 2005 | March     |           13 | 8%           |
| 2005 | April     |           12 | -8%          |
| 2005 | May       |           15 | 25%          |
+------+-----------+--------------+--------------+
29 rows in set, 58 warnings (0.03 sec)

Day 12.2>

mysql> CREATE TABLE emp_udf ( Emp_ID INT AUTO_INCREMENT PRIMARY KEY, Name VARCHAR(255), DOB DATE );
Query OK, 0 rows affected (0.05 sec)

mysql> INSERT INTO emp_udf (Name, DOB)
    -> VALUES
    ->     ("Piyush", "1990-03-30"),
    ->     ("Aman", "1992-08-15"),
    ->     ("Meena", "1998-07-28"),
    ->     ("Ketan", "2000-11-21"),
    ->     ("Sanjay", "1995-05-21");
Query OK, 5 rows affected (0.03 sec)
Records: 5  Duplicates: 0  Warnings: 0

Stored Procedures:>

CREATE DEFINER=`root`@`localhost` FUNCTION `calculate_age`(dob date) RETURNS varchar(50) CHARSET latin1
    DETERMINISTIC
begin
    declare years int;
    declare months int;
    declare age varchar(50);

    set years = timestampdiff(year, dob, curdate());
    set months = timestampdiff(month, dob, curdate()) - (years * 12);
    
    set age = concat(years, ' years ', months, ' months');
    
    return age;
end


mysql> SELECT Emp_ID, Name, DOB, calculate_age(DOB) AS Age FROM emp_udf;
+--------+--------+------------+-------------------+
| Emp_ID | Name   | DOB        | Age               |
+--------+--------+------------+-------------------+
|      1 | Piyush | 1990-03-30 | 33 years 7 months |
|      2 | Aman   | 1992-08-15 | 31 years 3 months |
|      3 | Meena  | 1998-07-28 | 25 years 4 months |
|      4 | Ketan  | 2000-11-21 | 23 years 0 months |
|      5 | Sanjay | 1995-05-21 | 28 years 6 months |
+--------+--------+------------+-------------------+
5 rows in set (0.03 sec)
